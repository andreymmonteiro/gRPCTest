// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/UserService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCTest.Protos {
  public static partial class UserService
  {
    static readonly string __ServiceName = "UserService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::gRPCTest.Protos.GetUserRequest> __Marshaller_GetUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.GetUserRequest.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.UserDto> __Marshaller_UserDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.UserDto.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.CreateUserRequest> __Marshaller_CreateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.CreateUserRequest.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.UserCreateResultDto> __Marshaller_UserCreateResultDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.UserCreateResultDto.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.UpdateUserRequest> __Marshaller_UpdateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.UpdateUserRequest.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.UserUpdateResultDto> __Marshaller_UserUpdateResultDto = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.UserUpdateResultDto.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.DeleteUserRequest> __Marshaller_DeleteUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.DeleteUserRequest.Parser));
    static readonly grpc::Marshaller<global::gRPCTest.Protos.DeleteUserResponse> __Marshaller_DeleteUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCTest.Protos.DeleteUserResponse.Parser));

    static readonly grpc::Method<global::gRPCTest.Protos.GetUserRequest, global::gRPCTest.Protos.UserDto> __Method_Get = new grpc::Method<global::gRPCTest.Protos.GetUserRequest, global::gRPCTest.Protos.UserDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_GetUserRequest,
        __Marshaller_UserDto);

    static readonly grpc::Method<global::gRPCTest.Protos.CreateUserRequest, global::gRPCTest.Protos.UserCreateResultDto> __Method_Post = new grpc::Method<global::gRPCTest.Protos.CreateUserRequest, global::gRPCTest.Protos.UserCreateResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Post",
        __Marshaller_CreateUserRequest,
        __Marshaller_UserCreateResultDto);

    static readonly grpc::Method<global::gRPCTest.Protos.UpdateUserRequest, global::gRPCTest.Protos.UserUpdateResultDto> __Method_Put = new grpc::Method<global::gRPCTest.Protos.UpdateUserRequest, global::gRPCTest.Protos.UserUpdateResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Put",
        __Marshaller_UpdateUserRequest,
        __Marshaller_UserUpdateResultDto);

    static readonly grpc::Method<global::gRPCTest.Protos.DeleteUserRequest, global::gRPCTest.Protos.DeleteUserResponse> __Method_Delete = new grpc::Method<global::gRPCTest.Protos.DeleteUserRequest, global::gRPCTest.Protos.DeleteUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_DeleteUserRequest,
        __Marshaller_DeleteUserResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCTest.Protos.UserServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    [grpc::BindServiceMethod(typeof(UserService), "BindService")]
    public abstract partial class UserServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPCTest.Protos.UserDto> Get(global::gRPCTest.Protos.GetUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCTest.Protos.UserCreateResultDto> Post(global::gRPCTest.Protos.CreateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCTest.Protos.UserUpdateResultDto> Put(global::gRPCTest.Protos.UpdateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCTest.Protos.DeleteUserResponse> Delete(global::gRPCTest.Protos.DeleteUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_Post, serviceImpl.Post)
          .AddMethod(__Method_Put, serviceImpl.Put)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCTest.Protos.GetUserRequest, global::gRPCTest.Protos.UserDto>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_Post, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCTest.Protos.CreateUserRequest, global::gRPCTest.Protos.UserCreateResultDto>(serviceImpl.Post));
      serviceBinder.AddMethod(__Method_Put, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCTest.Protos.UpdateUserRequest, global::gRPCTest.Protos.UserUpdateResultDto>(serviceImpl.Put));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCTest.Protos.DeleteUserRequest, global::gRPCTest.Protos.DeleteUserResponse>(serviceImpl.Delete));
    }

  }
}
#endregion
